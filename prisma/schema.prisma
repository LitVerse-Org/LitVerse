generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  email    String  @unique
  username String  @unique
  password    String?
  bio         String?
  posts       Post[]
  likes       Like[]
  followedBy  Follower[] @relation("UserFollowers")
  following   Follower[] @relation("UserFollowing")
  comments    String?
  profileImgS3URL  String? // S3 URL for profile picture img
  coverImgS3URL    String? // S3 URL for cover art img
  backgroundImgS3URL    String? // S3 URL for background art img
}

model Follower {
  id          Int      @id @default(autoincrement())
  userId      Int
  followerId  Int
  createdAt   DateTime @default(now())
  user        User     @relation("UserFollowers", fields: [userId], references: [id])
  follower    User     @relation("UserFollowing", fields: [followerId], references: [id])
}

model Like {
  id      Int  @id @default(autoincrement())
  userId  Int
  postId  Int
  user    User @relation(fields: [userId], references: [id])
  post    Post @relation(fields: [postId], references: [id])
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String   // For Markdown-formatted text content like stories and poems
  mediaUrl  String?  // S3 URL for images or videos
  mediaType String?  // Type of media: 'image', 'video', 'none'
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  likes     Like[]
  tags String[]  // Array of tags (categories, like "poem", "story", "art", etc.)
}